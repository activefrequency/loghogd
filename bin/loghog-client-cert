#!/bin/sh

set -e
set -u

IFS=":"

CURDIR=`readlink -f ./`
CA_LOCATIONS="$CURDIR:/etc/loghogd:/etc/loghogd/certs:/usr/local/etc/loghogd:/usr/local/etc/loghogd'"

DEFAULT_CA_DOMAIN='loghog'

usage() {
    echo "Usage: `basename $0` <domain> [ca-path] [ca-name]" >&2
    echo "" >&2
    echo "For example:" >&2
    echo "  $ `basename $0` `hostname --fqdn`" >&2
    echo "or" >&2
    echo "  $ `basename $0` `hostname --fqdn` /etc/loghogd/ loghog" >&2
    echo "" >&2
}

if [ $# -lt 1 ]; then
    usage
    exit 1
fi

[ "$1" = "-h" ] || [ "$1" = "--help" ] && usage && exit

domain="$1"

[ $# -lt 2 ] && ca_root="$CURDIR" || ca_root="$2"
[ $# -lt 3 ] && ca_name="$DEFAULT_CA_DOMAIN" || ca_name="$3"

ca_root=`echo "$ca_root" | sed 's/\/$//'`

if [ $# -gt 1 ]; then
    ca_root="$2"
else
    for d in $CA_LOCATIONS; do
        if [ -e "$d/$ca_name-ca.key" ]; then
            ca_root="$d"
            break
        fi
    done
fi

old_umask=`umask`
umask 0066

client_key="$domain.key"
client_req="$domain.req"
client_pem="$domain.pem"

ca_key="$ca_root/$ca_name-ca.key"
ca_cert="$ca_root/$ca_name-ca.cert"

echo "Using CA key at: $ca_key"
echo "Using CA cert at: $ca_cert"
echo

if [ ! -e $ca_key ] || [ ! -e $ca_cert ]; then
    [ ! -e $ca_key ] && echo "Error! File does not exist: $ca_key" >&2
    [ ! -e $ca_cert ] && echo "Error! File does not exist: $ca_cert" >&2
    echo "" >&2
    echo "Please verify that these exist and try again." >&2
    echo "Alternatively supply a different path for the ca-root an ca-name" >&2
    echo "" >&2
    usage
    exit 1
fi

# Generate a client key and signed it with the CA
openssl genrsa -out "$client_key" 1024
openssl req -subj "/CN=$domain" -new -extensions v3_ca -key "$client_key" -out "$client_req"
openssl x509 -req -in "$client_req" -CA "$ca_cert" -CAkey "$ca_key" -CAcreateserial -out "$client_pem"

# Combine key and cert into one file
cat "$client_key" >> "$client_pem"

# Clean up
rm "$client_req" "$client_key"

# If we are doing this with SUDO, chown the user
if env | grep '^SUDO_USER=' > /dev/null 2>&1; then
    chown $SUDO_USER:$SUDO_USER "$client_pem"
fi

umask $old_umask

